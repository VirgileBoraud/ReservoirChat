Le dispositif Tabletop du projet AIDE : développement de son interface
utilisateur. Lola Denet

To cite this version:

Lola Denet. Le dispositif Tabletop du projet AIDE : développement de son
interface utilisateur.. [Rapport Technique] RT-0508, Inria Bordeaux
Sud-Ouest. 2020, pp.14. ￿hal-02935633￿

HAL Id: hal-02935633

https://inria.hal.science/hal-02935633

Submitted on 14 Sep 2020

HAL is a multi-disciplinary open access archive for the deposit and
dissemination of sci- entific research documents, whether they are pub-
lished or not. The documents may come from teaching and research
institutions in France or abroad, or from public or private research
centers.

L’archive ouverte pluridisciplinaire HAL, est destinée au dépôt et à la
diffusion de documents scientifiques de niveau recherche, publiés ou
non, émanant des établissements d’enseignement et de recherche français
ou étrangers, des laboratoires publics ou privés.

Distributed under a Creative Commons Attribution 4.0 International
License

Le dispositif Tabletop du projet AIDE : développement de son interface
utilisateur.

Lola Denet

G N E + R F - - 8 0 5 0 - - T R A R N

I

/

I

TECHNICAL REPORT N° 0508 Septembre 2020

Project-Team Mnemosyne

N R S

I

3 0 8 0 - 9 4 2 0 N S S

I

Le dispositif Tabletop du projet AIDE : développement de son interface
utilisateur.

Lola Denet

Équipe-Projet Mnemosyne

Rapport technique n° 0508 — Septembre 2020 — 14 pages

Le travail présenté ici consiste en la création d’une interface ludique
et interactive Résumé : pour un serious game qui est une des actions du
projet : Artiﬁcial Intelligence Devoted to Educa- tion (AIDE). Ce projet
a pour but de permettre le développement de la pensée computationnelle
(ou pensée informatique) et d’en étudier les mécanismes d’apprentissage
par des techniques, ou ap- proches, basés sur les neurosciences
cognitives et les sciences de l’éducation. L’expérience d’appren-
tissage passe par un jeu d’évasion (escape game) sur table utilisant des
composants électroniques et des outils issus de la robotique.
L’interface est visualisée sur un écran avec un processeur à bas coût.
Elle se présente sous forme de pages Web. Le jeu communique avec
l’interface en utilisant un serveur local et des techniques
d’apprentissage automatique ou apprentissage machine (machine learning).
Les interactions entre l’apprenant et la table de jeu sont ﬁlmées et
analysées en temps réel, pour être aﬃchée au sein de l’interface et
enregistrées. Cette dernière est aussi chargée de transmettre les
indications et les éléments scénarisés du jeu. La créativité,
l’imagination et les compétences de l’apprenant sont ainsi sollicitées
et évaluées.

Mots-clés : informatiques, neurosciences cognitives, science
computationnelle de l’éducation.

serious game, escape game, pensée computationnelle, apprentissage,
compétences

RESEARCH CENTRE BORDEAUX – SUD-OUEST

200 avenue de la Vieille Tour 33405 Talence Cedex

The AIDE project’s Tabletop device: development of its user interface.

Abstract: The work presented here consists in the creation of a playfull
and interactive interface for a serious game part of the project:
Artiﬁcial Intelligence Devoted to Education (AIDE). This project aims to
help developing computational thinking from tangible and unplugged
activity, while studing the human learning mechanisms considering
modelinf, based on cognitive neuros- ciences and educationational
science 1. The learning activity involves a tabletop escape game,
collecting learning analytics using electronic components and software
tools. The interface is vi- sualized on a screen with a low cost
processor. It is implemented as a set of web pages. The game
communicates with the interface using a dedicated server, with machine
learning algorithms. The interactions between the learner and the game
table are ﬁlmed and analyzed in real time, to be displayed on the
interface, and recorder. The latter is also responsible for transmitting
the indications and scripted elements of the game. The creativity,
imagination and skills of the learner are thus measured and evaluated.

Key-words: cognitive neuroscience, computational science of education.

serious game, escape game, computational thinking, learning, computer
skills,

1.  https://www.inria.fr/en/aide-new-exploratory-action-inria

Table des matières

Introduction

1 Matériel et méthodes

1.1 Les pages web . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . 1.1.1 Le scénario . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . 1.1.2 Construction des pages . . .
. . . . . . . . . . . . . . . . . . . . . . . . . 1.2 Implémentation des
canevas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1.3
Architecture de l’interface . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . .

2 Résultats et discussion

Conclusion

Références

1

2 2 2 3 5 7

9

13

14

Le dispositif Tabletop du projet AIDE : développement de son interface
utilisateur.

1

Introduction

Ce projet a pour but de permettre le développement de la pensée
computationnelle (ou pensée informatique) et d’en étudier les mécanismes
d’apprentissage par des techniques, ou approches, basés sur les
neurosciences cognitives et les sciences de l’éducation 1.

Le développement de la pensée computationnelle 2 3, en tant que
compétence du XXIe siècle, est un élément capital pour vivre au
quotidien et réussir dans une société où les technologies numériques
font partie du quotidien. Il est important d’apprendre ou de
ré-apprendre à identiﬁer, comprendre et utiliser ces technologies aﬁn de
ne pas les subir mais aussi de remettre en question l’utilisation
actuelle dans un but d’amélioration et de démocratisation. En eﬀet, ces
outils contri- buent au développement des civilisations mais parfois au
détriment de certaines valeurs humaines et aussi de la planète. L’impact
environnemental et sociétal ne doivent pas être oubliés. La sen-
sibilisation à ces sujets et l’initiation à la pensée computationnelle
sont les enjeux de ce projet : revenir aux origines, et comprendre ce
qui a conduit au développement et à l’utilisation de ces technologies
aﬁn d’en corriger les déviances. Un teaser reprenant ces éléments est
disponible en ligne 4.

Pour enseigner, il est tout d’abord crucial de comprendre les mécanismes
d’apprentissage. L’association des neurosciences cognitives et des
sciences computationnelles de l’éducation per- mettent d’étudier cela.
L’apprentissage par le jeu a déjà été exploré et a fait ses preuves.

Divya Menon et ses collaborateurs ont réalisé une importante revue de la
littérature à ce sujet en 2019 [Menon et al., 2019] également publiée
dans une version française grand public[Romero et al., 2018]. Dans
celle-ci, il est démontré que les jeux d’évasion de table peuvent
contribuer à maintenir l’implication du joueur dans les activités
proposées. C’est-à-dire que cette méthode peut permettre aux apprenants
de rester impliqués activement dans le processus d’apprentissage.
D’autre part, les composants de la compétence de pensée computationnelle
sont explicités. Il se trouve que ces composants sont présents dans la
plupart des jeux d’évasion ou de société. Il serait alors question
d’utiliser ces outils pour transmettre, aux apprenants, les
apprentissages nécessaires à l’acquisition de la pensée
computationnelle. En eﬀet, la pensée logique, la pensée al- gorithmique,
la simulation, le débogage, la résolution de problèmes et la pensée
collaborative sont des compétences développées et sollicitées dans ce
type de jeux. Cependant, Divya Menon et ses collaborateurs [Menon et
al., 2019] ont identiﬁé que les apprenants acquièrent ces composants de
la pensée computationnelle sans pour autant qu’ils soient identiﬁés et
conscientisés par ceux-ci. En eﬀet, ils mobilisent des compétences
capitales pour l’apprentissage de la programmation sans se rendre compte
de ce qu’ils mobilisent. Or, il est important que les savoirs soient
conscientisés pour être transférables. Ainsi, la métacognition, ou la
mentalisation des processus mentaux, est un aspect à prendre en compte.
Jean-Philippe Lachaux explique en 2018 [Lachaux, 2018] que la
métacognition est capitale pour l’apprentissage et la transférabilité
des compétences. Il aborde également le fait que les compétences
acquises par le jeu doivent faire l’objet d’une méthode et d’un
vocabulaire adaptés aﬁn de les transférer dans les apprentissages
scolaires.

Divya Menon et ses collaborateurs [Menon et al., 2019] ont mis en
évidence que les activités physiques et cognitives peuvent être
intégrées en utilisant la programmation. L’apprentissage de la
programmation informatique et donc de la pensée computationnelle
pourraient donc permettre d’y parvenir. Les apprenants seraient donc
obligés d’utiliser leurs mains et leur esprit pour at-

1.  https://www.inria.fr/fr/aide-nouvelle-action-exploratoire-chez-inria
2.  https://interstices.info/la-pensee-informatique/
3.  https://project.inria.fr/classcode/mais-pourquoi-classcode-parle-de-pensee-informatique/
4.  https://www.youtube.com/watch?v=K0JdRtHII1g&feature=youtu.be

RT n° 0508

2

Lola Denet

teindre les objectifs ﬁxés. Cependant, la limite de ces techniques se
trouve dans le moyen de les évaluer. En eﬀet, dans les articles étudiés
lors de cette revue, il est souvent question de diﬃcultés à évaluer les
activités des apprenants lors des jeux débranchés ainsi que leur impact.
Ainsi, le projet AIDE a pour but de poursuivre ces recherches par le
biais d’une action exploratoire.

Le projet AIDE 5 s’inspire de cette revue pour créer un dispositif
accessible chargé de mobi- liser les diﬀérents composants de la pensée
computationnelle. Les enjeux d’apprentissages sont clairs et il est
évident que les méthodes d’évaluation des activités devront être
explorées. Un autre enjeu de ce projet est l’accessibilité. Le
dispositif utilisé est un jeu d’évasion de table conçu avec des
matériaux à bas coût aﬁn de permettre à n’importe quelle structure de
concevoir elle- même son dispositif d’apprentissage de la pensée
computationnelle. Ainsi, l’exclusion potentielle de certains groupes
sociaux a été considérée lors de la conception aﬁn que le milieu social
ne soit pas un frein à l’apprentissage. Le rapport de recherche de
Sabrina Barnabé et ses collaborateurs [Barnabé et al., 2020], dont je
suis co-autrice, développe avec précision ces éléments ainsi que le
fonctionnement et les objectifs des diﬀérentes activités du dispositif.

En s’appuyant sur ces diﬀérentes notions, le dispositif utilise aussi
bien des activités dé- branchées que des activités connectées.
L’interface a un rôle capital dans les interactions avec l’apprenant.
Elle contribue notamment à la métacognition, à l’accompagnement et à
l’évaluation des activités. Cela sous-tend qu’elle doit respecter les
concepts abordés précédemment en termes d’accessibilité, d’interactivité
et de performance tout en restant agréable, simple et ludique.

La conception de cette interface sera développée dans la partie suivante
de ce rapport. Ensuite,

les résultats seront présentés et discutés, avant de conclure sur ce
sujet.

1 Matériel et méthodes

Tous les ﬁchiers sources et ressources multimédia associées de ce projet
sont disponibles en ligne 6 ainsi que la documentation générale 7. Tous
les ﬁchiers composant l’interface sont égale- ment disponibles en ligne
8 et sont documentés 9. Ce rapport n’a donc pas vocation à reprendre la
documentation mais développe le raisonnement et les méthodes de
conception ainsi que les principes d’utilisation de l’interface.

1.1 Les pages web

1.1.1 Le scénario

Pour permettre l’immersion et l’implication de l’apprenant dans le jeu
d’évasion, la création d’un scénario ludique paraissait essentielle. La
collaboration entre les diﬀérents membres de l’équipe AIDE 10 a permis
de concevoir l’environnement, l’ambiance ainsi que les personnages
chargés d’accompagner l’apprenant tout au long de son aventure. Ainsi,
chaque protagoniste a une personnalité et un rôle bien identiﬁés.

D’autre part, le développement de l’interface prend en compte la taille
du navigateur aﬁn d’adapter son aﬃchage. De plus, l’aﬃchage des éléments
sur les diﬀérentes pages a été pensé de sorte que l’ergonomie soit
préservée puisque les interactions entre l’interface et l’apprenant se

5.  https://gitlab.inria.fr/line/aide-group/aide
6.  https://gitlab.inria.fr/line/aide-group/aide/-/tree/master
7.  http://aide-line.inria.fr/build/www/index.html
8.  https://gitlab.inria.fr/line/aide-group/aide/-/tree/master/%40lola-denet/fr
9.  http://aide-line.inria.fr/build/www-lola/index.html
10. https://team.inria.fr/mnemosyne/fr/aide/

Inria

Le dispositif Tabletop du projet AIDE : développement de son interface
utilisateur.

3

feront au travers d’un écran tactile (dimensions de l’écran en pixels :
1280x800).

Au début de la simulation, l’apprenant se trouve devant un château
verrouillé dans lequel des génies de l’informatique ont été faits
prisonniers par des monstres cruels qui refusent de partager les savoirs
en lien avec la pensée computationnelle. Ces huit personnalités sont des
grands noms de l’histoire de l’informatique.

Avant de pouvoir entrer dans le château, l’apprenant doit répondre à un
questionnaire pour libérer Ozon, une dragonne qui va l’accompagner dans
son périple. Ozon sera chargée de donner toutes les consignes de départ
pour résoudre les énigmes du château. Elle sera accompagnée de quelques
amis ayant des rôles bien distincts : Saturnin le lutin, Atlas le mage
ancien et Stella l’elfe magique.

Deux savants (une femme et un homme) sont prisonniers dans chaque salle.
La résolution d’une énigme permet de déverrouiller la porte menant à la
salle suivante. Saturnin sera là pour apporter son aide et des indices à
l’apprenant. A la ﬁn de chaque épreuve, Atlas transmettra son savoir
historique sur les savants libérés alors que Stella expliquera à
l’apprenant les compétences qu’il a apprises et mobilisées au cours de
l’épreuve.

Le scénario a été divisé en diﬀérentes parties selon les objectifs de
chaque salle contenue dans le jeu d’évasion. Les éléments graphiques 11,
les dialogues ainsi que les enregistrements audio 12 ont ensuite été
créés en collaboration avec Mathieu Manrique, moniteur éducateur diplômé
d’Etat et artiste. Il a créé et dessiné les images de fond, les boutons
ainsi que les personnages de l’interface et du teaser. De plus, il a
prêté sa voix aux personnages masculins de l’interface.

Une vidéo tutorielle expliquant l’utilisation des boutons de l’interface
et la présentation des

personnages a été réalisée 13.

1.1.2 Construction des pages

Le rapport de recherche de Sabrina Barnabé et ses collaborateurs
[Barnabé et al., 2020] détaillent la conception du jeu d’évasion ainsi
que les objectifs de chaque salle. C’est sur cette base que les pages
web de l’interface ont été élaborées.

Le jeu d’évasion comporte quatre salles auxquelles s’ajoutent une salle
0 permettant de re- cueillir des informations sur l’apprenant et une
salle de ﬁn servant de conclusion. Chaque activité est composée de deux
ﬁchiers .html. L’architecture des ﬁchiers est détaillée dans le tableau
de la ﬁgure 2 et dans le diagramme de la ﬁgure 4.

La salle 0 est chargée de l’introduction du scénario ainsi que de
recueillir des informations sur l’apprenant par le biais d’un
questionnaire. Dans le ﬁchier room0_1.html, chaque question est sous
forme d’input et a sa propre div de sorte qu’une seule question s’aﬃche
à l’écran. Toutes les questions s’incluent dans un form de façon à
recueillir les informations saisies dans les input. Au départ, toutes
les divisions sont cachées. La première apparaît lorsque l’apprenant
clique sur l’image cliquable de Ozon. Pour passer à la question
suivante, la valeur saisie est contrôlée par la fonction
checkRequiredFields() dans interface.js lorsque l’apprenant clique sur
la ﬂèche de droite. Cette fonction permet de vériﬁer au fur et à mesure
des input qu’aucun champs n’est vide et que la valeur saisie est valide.
Si c’est le cas, la division suivante s’aﬃche. Sinon, une alerte indique
si la valeur est manquante ou incorrecte et met en surbrillance l’input
concerné.

11. https://gitlab.inria.fr/line/aide-group/aide/-/tree/master/%40lola-denet/images/mathieu
12. https://gitlab.inria.fr/line/aide-group/aide/-/tree/master/%40lola-denet/fr/audio
13. https://gitlab.inria.fr/line/aide-group/aide/-/tree/master/@lola-denet/fr/video

RT n° 0508

4

Lola Denet

Il est possible de revenir à la division précédente en cliquant sur la
ﬂèche de gauche. L’aﬃchage des divisions est géré par les fonctions
showDiv() et showDivTechno(). Elles sont appelées directement pour
revenir en arrière mais sont appelées dans la fonction
checkRequiredFields() pour avancer dans le questionnaire. La fonction
showDivTechno() gère l’aﬃchage d’une division en particulier car son
aﬃchage dépend de l’âge saisi par l’apprenant. Lorsque ce dernier est
vériﬁé, la divTechnoKids ou la divTechnoOlder s’aﬃche. Une fois le
dernier input rempli, un bouton s’aﬃche pour libérer Ozon, ouvrir le
château et soumettre le formulaire. Les données sont ainsi sauvées dans
un ﬁchier .json.

Il existe diﬀérents moyens de remplir le questionnaire. En eﬀet, lorsque
la première division s’aﬃche, il faut saisir une adresse mail. Il est
alors possible de cliquer sur le bouton “Charger”. Cela provoque le
remplissage automatique du formulaire si l’adresse mail existe déjà sur
le ser- veur, c’est à dire, si l’apprenant a déjà répondu au
questionnaire. Si c’est le cas et qu’aucune donnée n’est manquante, un
nouveau bouton s’aﬃche pour permettre de passer le formulaire pour
libérer Ozon directement. Si au moins une donnée est manquante ou
invalide, l’autorem- plissage fonctionnera mais ne permettra pas de
passer le formulaire, il faudra alors repasser les divisions une à une
mais une alerte aﬃchera laquelle est incorrecte. L’autoremplissage du
formu- laire est également possible par l’url. En saisissant le nom des
input et leurs valeurs dans la barre d’adresse, les champs se rempliront
automatiquement. Tout cela est possible grâce aux fonctions
remanentForm() et remanentFormLoad() dans client.js 14. De même, c’est
dans ce ﬁchier que se trouve la fonction fillString() permettant
d’anticiper le multilinguisme. En eﬀet, le texte en français n’est pas
saisi directement dans le ﬁchier .html. Il est stocké sous forme de
chaînes de caractères avec un identiﬁant unique dans string.js. La
fonction est appelée dans une balise
