Contrôle Biomimétique de Prothèse par réseaux de neurones Tristan
Barennes, Xavier Hinaut, Frédéric Alexandre

To cite this version:

Tristan Barennes, Xavier Hinaut, Frédéric Alexandre. Contrôle
Biomimétique de Prothèse par réseaux de neurones. AMINA 2022 - 11ème
édition du Workshop Applications Médicales de l’Informatique : Nouvelles
Approches, Nov 2022, Monastir, Tunisie. ￿hal-03940097￿

HAL Id: hal-03940097

https://hal.science/hal-03940097

Submitted on 15 Jan 2023

HAL is a multi-disciplinary open access archive for the deposit and
dissemination of sci- entific research documents, whether they are pub-
lished or not. The documents may come from teaching and research
institutions in France or abroad, or from public or private research
centers.

L’archive ouverte pluridisciplinaire HAL, est destinée au dépôt et à la
diffusion de documents scientifiques de niveau recherche, publiés ou
non, émanant des établissements d’enseignement et de recherche français
ou étrangers, des laboratoires publics ou privés.

Contrôle Biomimétique de Prothèse

par réseaux de neurones

Tristan Barennes Equipe Mnemosyne Inria Institut des Maladies
Neurodégénératives et LaBRI Bordeaux, France

Xavier Hinaut Equipe Mnemosyne Inria Institut des Maladies
Neurodégénératives et LaBRI Bordeaux, France

Frédéric Alexandre Equipe Mnemosyne Inria Institut des Maladies
Neurodégénératives et LaBRI Bordeaux, France

Contact : frederic.alexandre@inria.fr

Abstract—Ce papier rapporte une expérience d’application d’intelligence
artificielle dans le domaine bio-médical. Cette expérience de contrôle
d’effecteur est originale car, considérant les caractéristiques de
l’application, les approches mathématiques classiques de contrôle ne
sont pas applicables et il faut recourir à des techniques de
neuro-contrôle où le contrôleur est appris à partir d’exemples.
L’application bio-médicale correspond au contrôle de prothèses pour des
personnes amputées du bras. La technique de neuro-contrôle apprendre
successivement un modèle direct puis un modèle inverse avec une approche
originale d’apprentissage joint. Les données sont acquises et préparées
à partir d’une application de réalité virtuelle. Les phases
d’entrainement et de test des réseaux montrent un émulateur (modèle
direct) de qualité suffisante pour permettre au controleur (modèle
inverse) de montrer une erreur inférieure à 0.1%. Ceci reste à valider
chez des sujets équipés de prothèse.

correspond

à

Keywords—controle, application biomédicale, prothèse, modèle

inverse;

I. INTRODUCTION

résolus directement par

Dans le domaine du contrôle robotique, les progrès des approches
théoriques et l’accroissement des moyens de calcul associés font que, le
plus souvent, des problèmes de contrôle d’effecteurs peuvent être le
développement de modèles directs et inverses, sans avoir recours à des
techniques d’intelligence artificielle et d’apprentissage automatique, à
partir d’exemples. On peut par exemple voir dans [1] un modèle assez
ancien pour le contrôle d’un bras avec plusieurs articulations. Voir
aussi [2] pour un modèle mathématique bio-inspiré. A rebours de cette
tendance, nous avons été impliqués dans un projet où de telles approches
exactes l’élaboration d’approximations à travers l’apprentissage de
réseaux de neurones s’est révélé la meilleure voie à suivre. Nous
présentons ce projet avant de présenter comment nous l’avons abordé et
les résultats obtenus.

impossibles

étaient

où

et

II. UN PROJET DE CONTROLE BIOMIMETIQUE

Ce projet se situe dans le cadre d’une collaboration entre la recherche
académique et le monde biomédical, visant à pouvoir contrôler une
prothèse de bras pour des sujets amputés au-dessus du coude. L’épaule
reste commandée par le sujet et une prothèse de bras (articulée au coude
et au poignet, avec une pince ouvrante) contrôlable est fixée au moignon
du sujet. Il est envisagé différents moyens de pouvoir contrôler cette
prothèse pour permettre la saisie d’objets dans l’environnement du
sujet. A terme, une caméra placée sur le sujet pourrait permettre de
détecter l’objet cible; sa position et ses caractéristiques de forme
pourraient être estimées par un réseau de neurones de reconnaissance
d’image de type Deep Network et on pourrait alors procéder à la série de
commandes pour l’extension de la prothèse de bras et pour l’ajustement
de la pince pour la saisie. Sans attendre ce développement important et
de façon très intéressante, des travaux préliminaires [3] ont montré
que, pour une position et une orientation de cible données, les
mouvements de l’épaule étaient relativement corrélés à la dynamique du
reste du bras et montraient donc d’une certaine façon « l’intention » du
sujet. Nous avons donc voulu explorer la possibilité d’apprendre à
associer la dynamique de l’épaule (assurée par le sujet) avec celle du
reste du bras (la prothèse à contrôler), en considérant qu’il s’agit
uniquement ici d’une tâche de pointage (amener la main à la bonne
position), de préparation de la saisie (orientation de la pince) et que
la saisie finale se traduit simplement par la fermeture automatique de
la main au contact.

Cette description montre bien que, le bras à contrôler (représenté dans
la figure 1) étant pour partie humain et prothétique, il est difficile
d’y associer un modèle mathématique de contrôle. De plus, si le sujet va
effectivement assurer les mouvements de l’épaule selon les angles
ShPitch et ShRoll représentés sur la figure 1, la fixation de la
prothèse sur le moignon fait que la rotation ArmYaw doit être aussi
assurée par la prothèse car il y a des frottements et des glissements à
ce niveau sur l’appareillage. Donc, en résumé, ce que l’on voudrait
faire, c’est utiliser des réseaux de neurones artificiels pour apprendre
à contrôler les cinq angles restants du bras, à partir

XXX-X-XXXX-XXXX-X/XX/$XX.00 ©20XX IEEE

des deux angles ShPitch et ShRoll, pour atteindre et saisir une cible.
Avant de décrire quelles architectures de réseaux de neurones nous avons
utilisé, nous présentons tout d’abord le protocole expérimental qui nous
a permis d’acquérir des données pour entrainer ces réseaux.

Fore

ArmYaw

ArmYaw

Figure 1 : Les 7 angles du bras

III. PROTOCOLE EXPÉRIMENTAL

Pour pouvoir entraîner des réseaux de neurones à apprendre cette tâche,
des corpus ont été créés par expérimentation en réalité virtuelle. Des
sujets (non amputés) apprennent à contrôler un bras virtuel à l’aide de
leur propre bras et vont attraper successivement des séries d’objets
présentés dans l’espace virtuel et perçus à travers un casque de réalité
virtuelle et les reposer sur une plateforme orientée (un plateau).
L’objet est représenté par un cylindre (typiquement une bouteille),
repéré par son centre de gravité et par deux angles dans l’espace.

à

une

L’utilisation de la réalité virtuelle permet de mieux contrôler et
mesurer l’expérience. Grâce à des capteurs fixés sur le sujet, les
mouvements de son bras sont enregistrés (tout au long des expériences,
d’échantillonage d’approximativement 90Hz), à travers les angles
relatifs et les positions des capteurs. Ces positions sont repérées dans
un référentiel relatif à la position de l’épaule. Pour la constitution
des corpus, les positions et orientations des objets à attraper sont
choisies (et exprimées dans le référentiel de l’épaule) pour bien
échantilloner l’espace.

fréquence

Quelques problèmes ont dû être pris en compte pour constituer les
corpus, comme le fait que parfois les capteurs sont bruités ou envoient
des informations erronées. Quelques fonctions de nettoyage de données
ont donc dû être mises au point. Pour constituer des corpus afin
d’entrainer les réseaux indépendemment des sujets qui ont des tailles de
bras différentes, on a aussi effectué une homogénéisation des données,
en faisant l’hypothèse (qui est clairement une simplification) que les
sujets ont la même dynamique de mouvement quelle que soit la taille de
leur bras. On a retraduit les corpus en conservant les angles et en
recalculant les position du coude, du poignet et de la main pour des
longueurs de segments uniques (prises dans la moyenne). Aujourd’hui, des
corpus ont été constitués regroupant une vingtaine de sujets s’exerçant
à la saisie de multiples cibles (échantillonant l’espace) pendant une
heure.

IV. QUELLE FONCTION APPRENDRE ?

En première analyse, le problème principal à résoudre, en s’appuyant sur
le corpus des multiples trajectoires constitué, est d’assurer le
contrôle d’un mouvement dirigé seulement par l’épaule pour une cible
donnée. C’est à dire connaissant à chaque instant les deux angles de
l’épaule (ShPitch et ShRoll) qui sont commandés par le sujet, la
position et les angles de la cible à atteindre, contrôler l’évolution
des angles du coude et du (ArmYaw, ElbPitch, ForeArmYaw, HandPitch,
poignet HandRoll) pour accompagner le mouvement jusqu’à son but, en
suivant une dynamique naturelle. Dans cette perspective, nous avons
réalisé et entrainé le réseau simple de mise en correspondance
représenté dans la figure 3 (réseau supervisé entrainé par
rétropropagation).

Figure 2 : Expérimentation en réalité virtuelle pour enregistrer les
mouvements des sujets (a) pour saisir (b) et reposer (c) des objets
cylindriques

Figure 3 : Un réseau simple de mise en correspondance

Cependant ce système pose plusieurs problèmes. Si on l’entraine
directement avec la position de la cible, le bras va passer directement
de son état initial à un état final sur la cible et ne résoud donc pas
le problème de contrôle du bras tout au long de la trajectoire. Des
essais visant à passer par des étapes intermédiaires ont été étudiés
mais ne se sont pas rélévés satisfaisants pour plusieurs raisons
(définition stéréotypée des étapes intermédiaires, téléportation du bras
à des positions distantes en cas de changement de cible) et ne
permettaient donc pas d’envisager l’utilisation du réseau en situation
réelle, en dehors de la réalité virtuelle. Ceci nous a donc conduit à
envisager une solution de neuro-contrôle.

V. NEURO-CONTRÔLE

En contrôle (voir figure 4a), considérant zk l’état du système A et u la
commande que l’on applique, le principe d’un contrôleur est de délivrer
u connaissant zk. Il est à noter que zk peut inclure les variables
d’état observées mais aussi l’état désiré. Si l’on ne sait pas définir
directement le contrôleur (le modèle inverse) à partir des connaissances
du domaine, une technique classique est de mettre au point un modèle
direct (un émulateur du système à contrôler, voir figure 4b) et de se
servir de ce modèle direct pour mettre au point le modèle inverse (voir
figure 5).

(a) 

cami

𝑧(𝑡) 𝑧!(#)

(12, )

(b) 

truck

Figure 4 : Modèle inverse (a) et modèle direct (b) d’après [3]

Ce principe de contrôle a été étendu au domaine des réseaux de neurones,
avec une idée originale proposée dans [4], que nous illustrons dans la
figure 5. L’idée est d’utiliser des réseaux de neurones à couches
entrainés par rétropropagation et de commencer à entrainer l’émulateur
(modèle direct) puis, à la convergence de ce réseau, de geler ses poids
(ne plus les modifier). On peut alors passer à la phase d’entrainement
du modèle inverse et, comme on n’a pas accès à l’état désiré de la
couche de sortie du modèle inverse, calculer l’erreur en sortie du
modèle direct, puis la rétropropager à travers le modèle direct (sans
modifier les poids) puis à travers le modèle inverse qui pourra, lui,
être entrainé jusqu’à convergence.

𝑢(𝑡)

𝑧(𝑡 + 1) (10, )

(64, )

(20, )

(64, )

(20, )

Emulateur

Figure 5. Méthode inverse/directe avec des réseaux de neurones à couches
d’après [3]

Concernant maintenant le fait de proposer un contrôle le long d’une
trajectoire dynamique, nous empruntons l’idée dans [5], illustrée dans
la figure 6. Dans ce papier, les auteurs choisissent l’exemple du
contrôle d’un camion avec remorque en marche arrière et proposent
d’utiliser un algorithme de type BPTT (Back-Propagation Through Time).
Ils commencent avec des séquences temporelles courtes partant du but
atteint et étendent au fur et à mesure des convergences la longueur des
séquences. Nous avons appliqué cette approche pour des modèles de
perceptrons multi-couches (voir architecture retenue dans la figure 5).
Nous regardons maintenant si des modèles de type LSTM (Long Short Term
Memory) pourraient être utilisés.

(a) 
(b) 

Figure 6. Extension au contrôle de trajectoire par BPTT d’après [4]

VI. PREMIERS RÉSULTATS

En se basant sur des corpus de relativement grande taille (50 000
échantillons par sujet donc de l’ordre du million d’exemples), nous
avons pu mener différentes campagnes de mise au point en réalité
virtuelle, sur les différentes versions décrites plus haut, qui ont été
implantées et dont l’architecture a été optimisée.

Les figures 7 et 8 reportent des exemples de convergence et d’évaluation
typiques que l’on obtient pour l’émulateur et le controleur. Concernant
l’émulateur, un corpus de 4800 exemples suffit pour obtenir une
convergence de bonne qualité qui ne s’améliore pas quand on le passe
plusieurs fois (voir figure 7a). L’émulateur est ensuite testé sur un
corpus plus important (figure 7b) et montre des erreurs qui peuvent être
d’amplitude assez importante. Comme on le voit en observant la figure 8,
la performance de l’émulateur est cependant suffisante pour obtenir un
contrôleur de très bonne qualité.

La figure 8a montre que le contrôleur converge rapidement sur un corpus
de 3000 exemples ; là aussi passer à nouveau le corpus améliore peu la
convergence. La figure 8b montre, sur un corpus de test de 500 exemples,
que le contrôleur arrive assez efficacement à guider (la simulation en
réalité virtuelle de) la main de la prothèse, avec une erreur moyenne
inférieure à 0.1% et, en dehors de quelques cas particuliers que nous
essayons de comprendre, une erreur maximale dépassant rarement 1%. Des
courbes similaires ont été obtenues pour plusieurs campagnes avec des
corpus différents.

Figure 7. Entrainement (a) et test (b) de l’émulateur

(a) 
(b) 

Figure 8. Entrainement (a) et test (b) du contrôleur

Cependant, restant uniquement en réalité virtuelle, nous ne pouvons pas
avoir de cas où le sujet contrôle effectivement son

épaule et nous sommes obligés de rester en boucle ouverte en utilisant
des corpus déjà enregistrés, ce qui limite l’impact d’un modèle de
contrôleur. Un premier accès à des sujets amputés avec prothèse a été
possible pour tester une solution simple de type mise en correspondance
et a déjà donné des solutions très satisfaisantes pour les sujets. Nous
espérons pouvoir utiliser une version contrôlée au long de la
trajectoire dans les prochains mois.

architecture acteur-critique utilisant l’approche décrite dans [6]
devrait certainement donner aussi de très bons résultats. Cependant
cette approche supervisée est intéressante et doit être aussi
considérée, en particulier car elle passe par la mise au point préalable
d’un modèle direct (comme c’est également le cas dans notre cerveau) et
il est probable que ce modèle direct peut être utilisé dans notre
représentation du monde à d’autres fins, comme par exemple des
simulations mentales.

VII. CONCLUSION

REFERENCES

dans

cette

exprimées

direction),

Outre leur impact applicatif biomédical majeur (il est important pour
une personne amputée de pouvoir contrôler simplement et efficacement sa
prothèse, elles se sont très clairement cette expérimentation est
intéressante à double titre. Premièrement, elle rappelle l’intérêt de
disposer d’approches dirigées par les données quand les conditions
expérimentales font qu’une approche purement théorique n’est pas
possible. C’est une propriété majeure des réseaux de neurones de pouvoir
être entraînés à partir d’expérience, qui nous rappelle que c’est
également le cas pour notre propre cerveau. Deuxièmement, elle remet
dans l’actualité cette approche assez ancienne à base de réseaux de
neurones supervisés. Il est vrai que récemment l’apprentissage par
renforcement a démontré ses compétences pour ce type de problème de
guidage et, comme nous sommes actuellement en train de le vérifier, il
semble que des méthodes éprouvées d’apprentissage par renforcement comme
une

[1] Uno, Y., Kawato, M., & Suzuki, R. (1989). Formation and control of
optimal trajectory in human multijoint arm movement. Biological
Cybernetics, 61(2), 89-101.

[2] Flash, T. & Hogan, N. The coordination of arm movements: an
experimentally confirmed mathematical model. J. Neurosci. 5, 1688– 1703
(1985).

[3] Mick, S., Segas, E., Dure, L., Halgand, C., Benois-Pineau, J., Loeb,
G. E., Cattaert, D., & de Rugy, A. (2021). Shoulder kinematics plus
contextual target information enable control of multiple distal joints
of a simulated prosthetic arm and hand. Journal of NeuroEngineering and
Rehabilitation, 18(1), 3.

[4] Psaltis, D., Sideris, A., & Yamamura, A. A. (1988). A multilayered
neural network controller. IEEE Control Systems Magazine, 8(2), 17 21.
[5] Nguyen, D. H., & Widrow, B. (1990). Neural networks for
self-learning

control systems. IEEE Control Systems Magazine, 10(3), 18 23.

[6] Mnih, V., Badia, A. P., Mirza, M., Graves, A., Lillicrap, T. P.,
Harley, T., Silver, D., & Kavukcuoglu, K. (2016). Asynchronous Methods
for Deep Reinforcement Learning (arXiv:1602.01783). arXiv.


